/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Game.Game;
import Struct.Element;
import Struct.Enemy;
import Struct.Player;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author lucas
 */
public class Frame extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Frame
     */
    boolean setaDireita;
    boolean setaEsquerda;
    boolean atirar;
    boolean fb = false;
    int cooldown = 0;

    public Frame() {
        initComponents();

        createBufferStrategy(2);

        Thread t = new Thread(this);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 800));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            setaEsquerda = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            setaDireita = true;

        }

        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            atirar = true;
            if (cooldown > 80) {
                cooldown = 0;
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            setaEsquerda = false;
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            setaDireita = false;
        }

        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            atirar = false;
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    @Override
    public void run() {
        
        while(true){
        
        Random rdm = new Random();
        int countFire = 0;

        ArrayList<Element> elements = new ArrayList<Element>();

       Game x = new Game();
       
       int nivel = 1;
       int maxFire = 280;
          
       maxFire = x.createLevel(getWidth(), getHeight(), nivel);

        while (/*qntBolas(elements) > 0*/true) {
            
            
            if (acabou(x.elementos)){
               break;
            }
            
            if (countFire > maxFire) {
                countFire = 0;
            }
            
            if(x.elementos.size() == 1)
                x = new Game();

            Graphics g = getBufferStrategy().getDrawGraphics();
                      
            g.setColor(Color.WHITE);
            g.fillRect(0, 0, getWidth(), getHeight());
            
            x.drawScores(g);

            g.setColor(Color.RED);

            ArrayList<Element> novos = new ArrayList<Element>();
                x.render(g, setaDireita ? 1 : -1, setaEsquerda ? 1 : -1, atirar,countFire );
                if (atirar) {
                    atirar = false;
                }
                //u.collision(elements);
          //  }

            elements.addAll(novos);

            /*  txt_qntBolas.setText( Integer.toString(qntBolas(elements)));
            txt_qntBolas.paintAll(g);*/
            try {
                Thread.sleep(5);
            } catch (InterruptedException ex) {

            }

            countFire++;
            cooldown++;

            g.dispose();
            getBufferStrategy().show();
        
        }
        }
        //  run();
    }
    
    public boolean acabou (ArrayList<Element> e){
        for(Element h: e){
            if(h.team == h.team.B){
                return false;
            }
        }
        
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
